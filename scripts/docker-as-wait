#!/usr/bin/env bash
set -e

# Environement variables
: ${WAIT:=300}
: ${DATABASE_HOST:="db"}
: ${MAIL_HOST:="mail"}

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
CMD=""
WAITFORIT_PIDS=()

# Print help
function print_help() {
  echo "usage: $SCRIPT_NAME [options]

    --wait   # How many seconds to wait before exit with error

  * services:
    --mysql       # Wait until MySQL is ready
    --mailcatcher # Wait until Mailcatcher is ready
    HOST:PORT     # Any host and port to check (can be set multiple time)
  "
}

# Command options
SERVICES=()
while [ $# -gt 0 ]; do
  case "$1" in
    --mysql)
      SERVICES+=($DATABASE_HOST:3306)
      ;;
    --mailcatcher)
      SERVICES+=($MAIL_HOST:1080)
      ;;
    --wait=*)
      WAIT=$((${1#*=} * 10))
      ;;
    *:*)
      SERVICES+=(${1%:*}:${1#*:})
      ;;
    --)
      shift
      CMD=("$@")
      break
      ;;
    *)
      print_help
      exit 1
      ;;
  esac
  shift
done

function kill_children() {
  for WAITFORIT_PID in ${WAITFORIT_PIDS[@]}; do
    kill -INT -$WAITFORIT_PID
  done
}

# Run waitng process for every services
for SERVICE in ${SERVICES[@]}; do
  timeout $WAIT $SCRIPTPATH/wait-for-it "$SERVICE" --timeout=0 --quiet --child &
  WAITFORIT_PIDS+=($!)
  trap kill_children INT
done

# Wait on services (or timeout)
for WAITFORIT_PID in ${WAITFORIT_PIDS[@]}; do
  wait $WAITFORIT_PID
  WAITFORIT_RESULT=$?
  if [[ $WAITFORIT_RESULT -ne 0 ]]; then
    exit $WAITFORIT_RESULT
  fi
done

# Run command
if [ ! -z "$CMD" ]; then
  exec "${CMD[@]}"
fi

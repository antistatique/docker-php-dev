name: "Test, build and publish Docker images"
on:
  pull_request:
    types: [opened, synchronize, closed, reopened]
  workflow_dispatch:

jobs:
  dockerfile-php-only-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1']

    steps:
      - name: checkout source
        uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install Google Container Structure Test Framework
        run: curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Generate docker image config files for PHP ${{ matrix.php_version }}
        run: ./tools.sh --generate=${{ matrix.php_version }}
      - name: Build docker image for PHP ${{ matrix.php_version }}
        uses: docker/build-push-action@v2
        with:
          context: ./php/${{ matrix.php_version }}
          file: ./php/${{ matrix.php_version }}/Dockerfile
          tags: antistatique/php-dev:${{ matrix.php_version }}
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true
          push: false
      - name: Run tests on PHP ${{ matrix.php_version }} image
        run: ./tools.sh --test-cached=${{ matrix.php_version }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        if:  (github.event_name == 'workflow_dispatch' && github.ref == 'main') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
        with:
          context: ./php/${{ matrix.php_version }}
          file: ./php/${{ matrix.php_version }}/Dockerfile
          tags: antistatique/php-dev:${{ matrix.php_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          push: true

  dockerfile-php-node-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1']
        node_version: ['10', '11', '12', '16']
        exclude:
          - php_version: '5.6'
            node_version: 10
          - php_version: '5.6'
            node_version: 11
          - php_version: '5.6'
            node_version: 12
          - php_version: '5.6'
            node_version: 16
          - php_version: '7.0'
            node_version: 11
          - php_version: '7.0'
            node_version: 12
          - php_version: '7.0'
            node_version: 16
          - php_version: '7.1'
            node_version: 16
          - php_version: '7.2'
            node_version: 16
          - php_version: '7.3'
            node_version: 8
          - php_version: '7.3'
            node_version: 16
          - php_version: '7.4'
            node_version: 8
          - php_version: '7.4'
            node_version: 16
          - php_version: '8.0'
            node_version: 8
          - php_version: '8.0'
            node_version: 10
          - php_version: '8.0'
            node_version: 11
          - php_version: '8.1'
            node_version: 8
          - php_version: '8.1'
            node_version: 10
          - php_version: '8.1'
            node_version: 11
          - php_version: '8.1'
            node_version: 12
        include:
          - node_version: 6
            php_version: '7.1'
          - node_version: 9
            php_version: '7.1'
          - node_version: 9
            php_version: '7.2'
          - node_version: 12
            php_version: '8.0'
          - node_version: 14
            php_version: '8.0'
          - node_version: 16
            php_version: '8.0'
          - node_version: 16
            php_version: '8.1'

    steps:
      - name: checkout source
        uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install Google Container Structure Test Framework
        run: curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && chmod +x container-structure-test-linux-amd64 && sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Generate docker image config files for PHP ${{ matrix.php_version }} and Node ${{ matrix.node_version }}
        run: ./tools.sh --generate=${{ matrix.php_version }}-node${{ matrix.node_version }}
      - name: Build docker image for PHP ${{ matrix.php_version }} and Node ${{ matrix.node_version }}
        uses: docker/build-push-action@v2
        with:
          context: ./php/${{ matrix.php_version }}/node/${{ matrix.node_version }}
          file: ./php/${{ matrix.php_version }}/node/${{ matrix.node_version }}/Dockerfile
          tags: antistatique/php-dev:${{ matrix.php_version }}-node${{ matrix.node_version }}
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true
      - name: Run tests on PHP ${{ matrix.php_version }} and Node ${{ matrix.node_version }} image
        run: ./tools.sh --test-cached=${{ matrix.php_version }}-node${{ matrix.node_version }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        if:  (github.event_name == 'workflow_dispatch' && github.ref == 'main') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
        with:
          context: ./php/${{ matrix.php_version }}/node/${{ matrix.node_version }}
          file: ./php/${{ matrix.php_version }}/node/${{ matrix.node_version }}/Dockerfile
          tags: antistatique/php-dev:${{ matrix.php_version }}-node${{ matrix.node_version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          push: true
